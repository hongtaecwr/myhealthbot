const
    bodyParser = require('body-parser'),
    express = require('express'),
    line = require('@line/bot-sdk'),
    config = require('./config.json'),
    path = require('path'),
    _line_postback = require('./line_postback.js'),
    _postback = require('./postback.js'),
    _reply = require('./reply.js');

require('dotenv').config();

const app = express();

const line_client = new line.Client(config);

app.post('/webhook', line.middleware(config), (req, res) => {
    res.sendStatus(200)
    Promise
        .all(req.body.events.map(handleEvent))
        .then((result) => res.json(result));

});

app.set('view engine', 'ejs');

app.use(express.static('public'));

////line_client
app.get('/', function (req, res) {
    res.sendFile(path.join(__dirname + '/public/index.html'));
});
// app.get('/createquiz', function (req, res) {
//     res.sendFile(path.join(__dirname + '/public/createQuiz.html'));
// });
// app.get('/searchquiz', function (req, res) {
//     res.sendFile(path.join(__dirname + '/public/searchQuiz.html'));
// });
// app.get('/searchquizLine', function (req, res) {
//     res.sendFile(path.join(__dirname + '/public/searchQuizLine.html'));
// });
app.get('/policy', function (req, res) {
    res.sendFile(path.join(__dirname + '/public/policy.html'));
});
app.get('/bot-train', function (req, res) {
    res.sendFile(path.join(__dirname + '/public/bottrain.html'));
});
app.get('/test', function (req, res) {
    res.sendFile(path.join(__dirname + '/public/test.html'));
});
app.get('/json-upload-to-parse', function (req, res) {
    res.sendFile(path.join(__dirname + '/public/json-upload-to-parse.html'));
});
////////////



///////Handle Event
function handleEvent(event) {
    var userId = event.source.userId;
    console.log(event);

    if (event.type === 'postback') {
        var data = event.postback.data;
        _line_postback.process(userId, data, function (replyData) {
            var replyMessage = replyData.results;
            console.log("userId: %s ---- replyMessage: %s", userId, JSON.stringify(replyMessage));
            line_client.replyMessage(event.replyToken, replyMessage);
        });
    } else if (event.message.type == 'text') {
        console.log("------------> event.message.text: %s", event.message.text);
        switch (event.message.text) {
            case '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô':
            case '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô':
            case 'Start':
            case '‡πÑ‡∏õ‡πÄ‡∏•‡∏¢':
            case '‡πÄ‡∏£‡∏¥‡πà‡∏°':
                line_client.replyMessage(event.replyToken, [{
                    type: "text",
                    text: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°‡πÄ‡∏Æ‡∏•‡∏ó‡πå‡∏ö‡∏≠‡∏ó‡πÄ‡∏≠‡∏á",
                }, {
                    type: "text",
                    text: "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏Æ‡∏•‡∏ó‡πå‡∏ö‡∏≠‡∏ó ‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏ûü§ñ\n\n ‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏ö‡∏ó‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏ô‡∏π‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö\n\n ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå Help ‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö",
                },{
                    type: "sticker",
                    packageId: "2",
                    stickerId: "22"
                }]);
                break;
            

            case '‡∏™‡∏≠‡∏ô‡∏ô‡πâ‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏û‡∏π‡∏î':
            case '‡∏™‡∏≠‡∏ô‡∏ô‡πâ‡∏≠‡∏á':
            case '‡∏™‡∏≠‡∏ô‡∏û‡∏π‡∏î':
            case '‡∏™‡∏≠‡∏ô':
            line_client.replyMessage(event.replyToken, [{
                type: "text",
                text: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏≠‡∏ô‡πÇ‡∏î‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ",
            },{
                type: "image",
                originalContentUrl: "https://myhealthbot.herokuapp.com/assets/Guide-1.png",
                previewImageUrl: "https://myhealthbot.herokuapp.com/assets/Guide-1.png",
                animated: false,
            },{
                type: "template",
                altText: "‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡∏≠‡∏ô‡∏ö‡∏≠‡∏ó‡πÉ‡∏´‡πâ‡∏û‡∏π‡∏î",
                template: {
                    type: "buttons",
                    title: "‡∏™‡∏≠‡∏ô‡∏ö‡∏≠‡∏ó‡πÉ‡∏´‡πâ‡∏û‡∏π‡∏î",
                    text: "‡∏ß‡∏¥‡∏ò‡∏µ‡∏á‡πà‡∏≤‡∏¢‡πÜ‡πÅ‡∏Ñ‡πà‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á",
                    actions: [{
                        "type": "uri",
                        "label": "‡∏™‡∏≠‡∏ô‡∏ö‡∏≠‡∏ó‡πÉ‡∏´‡πâ‡∏û‡∏π‡∏î",
                        "uri": "https://myhealthbot.herokuapp.com/bot-train"
                    }]
                }
            }]);
            break;

            case '‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏£‡∏Ñ':
            case '‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏õ‡πà‡∏ß‡∏¢':
            case '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏Ñ':
            case '‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô':
            case '‡∏õ‡πà‡∏ß‡∏¢':
            line_client.replyMessage(event.replyToken, [{
                type: "text",
                text: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ö‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏Ñ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÇ‡∏£‡∏Ñ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏¢‡∏≤‡∏Å‡∏ó‡∏£‡∏≤‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏Ñ‡∏ô‡∏±‡πâ‡∏ô ‡πÜ ‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π",
            },{
                type: "template",
                altText: "this is a carousel template",
                template: {
                  type: "carousel",
                  actions: [],
                  columns: [
                    {
                      thumbnailImageUrl: "https://myhealthbot.herokuapp.com/img/disease_1.jpg",
                      title: "‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏Ñ",
                      text: "‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏£‡∏Ñ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏£‡∏≤‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô",
                      actions: [
                        {
                          type: "message",
                          label: "‡πÑ‡∏≠",
                          text: "‡πÑ‡∏≠"
                        },
                        {
                          type: "message",
                          label: "‡∏õ‡∏ß‡∏î‡∏®‡∏µ‡∏£‡∏©‡∏∞",
                          text: "‡∏õ‡∏ß‡∏î‡∏®‡∏µ‡∏£‡∏©‡∏∞"
                        }
                      ]
                    },
                    {
                      thumbnailImageUrl: "https://myhealthbot.herokuapp.com/img/disease_1.jpg",
                      title: "‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏Ñ",
                      text: "‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏£‡∏Ñ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏£‡∏≤‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô",
                      actions: [
                        {
                          type: "message",
                          label: "‡∏ß‡∏±‡∏ì‡πÇ‡∏£‡∏Ñ",
                          text: "‡∏ß‡∏±‡∏ì‡πÇ‡∏£‡∏Ñ"
                        },
                        {
                          type: "message",
                          label: "‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô",
                          text: "‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô"
                        }
                      ]
                    },
                    {
                      thumbnailImageUrl: "https://myhealthbot.herokuapp.com/img/disease_1.jpg",
                      title: "‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏Ñ",
                      text: "‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏£‡∏Ñ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏£‡∏≤‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô",
                      actions: [
                        {
                          type: "message",
                          label: "‡πÑ‡∏Ç‡πâ‡∏´‡∏ß‡∏±‡∏î‡πÉ‡∏´‡∏ç‡πà",
                          text: "‡πÑ‡∏Ç‡πâ‡∏´‡∏ß‡∏±‡∏î‡πÉ‡∏´‡∏ç‡πà"
                        },
                        {
                          type: "message",
                          label: "‡πÑ‡∏Ç‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏≠‡∏≠‡∏Å",
                          text: "‡πÑ‡∏Ç‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏≠‡∏≠‡∏Å"
                        }
                      ]
                    }
                  ]
                }
              }
        ]);
            break;
//////////////////////
            case 'help':
            case 'Help':
            case '#help':
            case '#Help':
            case '‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠':
            case '‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠':
            case '‡∏ä‡πà‡∏ß‡∏¢‡∏î‡πâ‡∏ß‡∏¢':
            case '‡∏ä‡πà‡∏ß‡∏¢':
            case '#‡∏ä‡πà‡∏ß‡∏¢':
            case '#‡∏ä‡πà‡∏ß‡∏¢‡∏´‡∏ô‡πà‡∏≠‡∏¢':
                line_client.replyMessage(event.replyToken, [{
                    type: "text",
                    text: "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÄ‡∏°‡∏ô‡∏π‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ üòÑüòÑ \n\n‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ \n\n‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô‡∏û‡∏π‡∏î ‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ\n#‡∏ñ‡∏≤‡∏° ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ #‡∏ï‡∏≠‡∏ö ‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏Ñ‡∏£‡∏±‡∏ö\n\n ‡∏ö‡∏≠‡∏ó‡∏°‡∏µ 4 ‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô ‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πà\n‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà\n‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô\n‡∏™‡∏≠‡∏ô‡∏ö‡∏≠‡∏ó‡∏û‡∏π‡∏î\n\n ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö",
                }, {
                    type: "template",
                    altText: "‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡∏≠‡∏ô‡∏ö‡∏≠‡∏ó‡πÉ‡∏´‡πâ‡∏û‡∏π‡∏î",
                    template: {
                        type: "buttons",
                        title: "‡∏™‡∏≠‡∏ô‡∏ö‡∏≠‡∏ó‡πÉ‡∏´‡πâ‡∏û‡∏π‡∏î",
                        text: "‡∏ß‡∏¥‡∏ò‡∏µ‡∏á‡πà‡∏≤‡∏¢‡πÜ‡πÅ‡∏Ñ‡πà‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á",
                        actions: [{
                            "type": "uri",
                            "label": "‡∏™‡∏≠‡∏ô‡∏ö‡∏≠‡∏ó‡πÉ‡∏´‡πâ‡∏û‡∏π‡∏î",
                            "uri": "https://myhealthbot.herokuapp.com/bot-train"
                        }]
                    }
                }]);
                break;
                /////////
                case '‡πÑ‡∏≠':
               //var test1 = event.message.text;
                if(event.message.text == '‡πÑ‡∏≠'){
                    line_client.replyMessage(event.replyToken, [{
                        type: "text",
                        text: "‡∏à‡∏≤‡∏°‡πÑ‡∏´‡∏°"
                    }]);
                    break; 
                        if (event.message.text == '‡∏à‡∏≤‡∏°') {
                        line_client.replyMessage(event.replyToken, [{
                            type: "text",
                            text: "‡∏õ‡∏ß‡∏î‡∏´‡∏±‡∏ß‡πÑ‡∏´‡∏°"
                        }]);
                        break;
                        if (event.message.text == '‡∏õ‡∏ß‡∏î‡∏´‡∏±‡∏ß') {
                            line_client.replyMessage(event.replyToken, [{
                                type: "text",
                                text: "‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏Ç‡πâ‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏î‡πâ‡∏≠"
                            }]);
                        break;
                        }
                    }
                }
                break;

////////
            default:
                var messageText = event.message.text;
                _reply.processMessage(messageText, function (responseMsg) {
                    if (responseMsg == messageText) {
                        _reply.callCloudCode("getReplyMsg", '{"msg":"' + messageText + '"}', function (response) {
                            if (response == "") {
                                _reply.callCloudCode("findBestMsgFromUnknow", '{"msg":"' + messageText + '"}', function (response) {
                                    if (response == "") {
                                        line_client.replyMessage(event.replyToken, [{
                                            type: "text",
                                            text: "‡∏ô‡πâ‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ô‡πä‡∏≤‡∏≤‡∏≤‡∏≤"
                                        }]);
                                    } else {
                                        line_client.replyMessage(event.replyToken, [{
                                            type: "text",
                                            text: _reply.badwordFilter(response)
                                        }]);

                                        var data = '{"msg":[' + JSON.stringify(messageText) + '],"replyMsg":[' + JSON.stringify(response) + ']}';
                                        _reply.callCloudCode("createUnknowMsg", data, function (response) {
                                        });
                                    }
                                });
                            } else if (responseMsg.substring(0, 5) == '#PUSH') {
                                var msg = responseMsg.replace("#PUSH", "");
                                var obj = JSON.parse(msg);
                                line_client.pushMessage(obj.userId, {
                                    type: "text",
                                    text: obj.replyMsg[0]
                                });
                            } else {
                                line_client.replyMessage(event.replyToken, [{
                                    type: "text",
                                    text: _reply.badwordFilter(response)
                                }]);
                            }
                        });
                    } else {
                        line_client.replyMessage(event.replyToken, [{
                            type: "text",
                            text: _reply.badwordFilter(responseMsg)
                        }]);
                    }
                });
                break;
        }
    } else { 
        return Promise.resolve(null); 
            }
} //end HandleEvent    



app.set('port', (process.env.PORT || 5000));
app.listen(app.get('port'), function () {
    console.log('run at port', app.get('port'));
});
module.exports = app; 